{"version":3,"sources":["n1-main/m1-ui/enterNewPassword/NewPassword.module.css","n1-main/m1-ui/passwordRecovery/LostPassword.module.css","n1-main/m1-ui/login/login.module.css","n1-main/m1-ui/registration/Registration.module.css","n1-main/m1-ui/nav/Nav.module.css","n1-main/m2-bll/registration-reducer.ts","n1-main/m2-bll/app-reducer.ts","n1-main/m3-dal/api.ts","n1-main/m2-bll/login-reducer.ts","n1-main/m1-ui/login/Login.tsx","n1-main/m1-ui/registration/Registration.tsx","n1-main/m1-ui/profile/Profile.tsx","n1-main/m2-bll/enter-new-password-reducer.ts","n1-main/m1-ui/enterNewPassword/EnterNewPassword.tsx","n1-main/m1-ui/passwordRecovery/PasswordRecovery.tsx","n1-main/m1-ui/error404/Error404.tsx","n1-main/m1-ui/routes/Routes.tsx","n1-main/m1-ui/nav/Nav.tsx","n1-main/m1-ui/App.tsx","reportWebVitals.ts","n1-main/m2-bll/profile-reducer.ts","n1-main/m2-bll/password-recovery-reducer.ts","n1-main/m2-bll/store.ts","index.tsx"],"names":["module","exports","ACTIONS_TYPE","initialState","isFetchingAC","isFetching","type","payload","instance","axios","create","baseURL","withCredentials","loginAPI","password","email","rememberMe","post","delete","registrationAPI","newPasswordAPI","resetPasswordToken","then","response","data","lostPasswordAPI","from","message","successLoginAC","isAuth","errorMessage","failedLoginAC","Login","dispatch","useDispatch","useSelector","state","login","fetch","app","formik","useFormik","initialValues","onSubmit","values","res","catch","e","error","console","log","to","className","s","h1","form","handleSubmit","form_item","htmlFor","id","name","onChange","handleChange","value","m","form_item_rememberMe","button","disabled","loading","isRedirecting","isLoading","redirectAC","redirect","REDIRECT","errorAC","ERROR","loadingAC","LOADING","Registration","registration","confirmPassword","a","err","validate","errors","test","length","placeholder","getFieldProps","touched","Profile","profileData","src","avatar","alt","onClick","setResponseError","responseError","changeRedirectStatus","redirectStatus","EnterNewPassword","useState","password1","setPassword1","password2","setPassword2","token","useParams","enterNewPassword","badPassword","setBadPassword","main","inputs","currentTarget","PasswordRecovery","setEmail","postEmailTC","Error404","PATH","Routes","path","exact","render","Nav","style","nav","App","useEffect","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","action","profile","passwordRecovery","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d1fe6fe8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"NewPassword_main__2QV19\",\"inputs\":\"NewPassword_inputs__1qhdP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"LostPassword_main__1p9VZ\",\"error\":\"LostPassword_error__1XO_D\",\"message\":\"LostPassword_message__3cQcO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form_item_rememberMe\":\"login_form_item_rememberMe__1mrbN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"registration\":\"Registration_registration__OhgLq\",\"h1\":\"Registration_h1__QCJBi\",\"form\":\"Registration_form__1JqTq\",\"form_item\":\"Registration_form_item__3XN0u\",\"button\":\"Registration_button__WUil5\",\"error\":\"Registration_error__25BlV\",\"loading\":\"Registration_loading__2RcRF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Nav_nav__1axFw\"};","import {Dispatch} from \"react\";\nimport {ThunkAction} from \"redux-thunk\";\nimport {AppStateType} from \"./store\";\nimport {registrationAPI} from \"../m3-dal/api\";\n\n//variables\nexport enum ACTIONS_TYPE {\n    REDIRECT = 'Registration/REDIRECT',\n    LOADING = 'Registration/LOADING',\n    ERROR = 'Registration/ERROR',\n}\n\n//typing\ntype redirectACType = ReturnType<typeof redirectAC>\ntype errorACType = ReturnType<typeof errorAC>\ntype loadingACType = ReturnType<typeof loadingAC>\ntype ActionType = redirectACType | errorACType | loadingACType\n\ntype ThunkType = ThunkAction<Promise<void>, AppStateType, unknown, ActionType>\n\ntype initialStateType = typeof initialState\n\n\nlet initialState = {\n    isRedirecting: false,\n    isLoading: false,\n    error: null as string | null\n}\n\nexport let registrationReducer = (state = initialState, action: ActionType): initialStateType => {\n    switch (action.type) {\n        case ACTIONS_TYPE.REDIRECT:\n            return {...state, isRedirecting: action.payload.redirect}\n\n        case ACTIONS_TYPE.ERROR:\n            return {...state, error: action.payload.error}\n\n        case ACTIONS_TYPE.LOADING:\n            return {...state, isLoading: action.payload.loading}\n        default:\n            return state\n    }\n}\n\nexport let redirectAC = (redirect: boolean) => ({\n    type: ACTIONS_TYPE.REDIRECT,\n    payload: {redirect}\n} as const)\n\nlet errorAC = (error: string | null) => ({\n    type: ACTIONS_TYPE.ERROR,\n    payload: {error}\n} as const)\n\nlet loadingAC = (loading: boolean) => ({\n    type: ACTIONS_TYPE.LOADING,\n    payload: {loading}\n} as const)\n\n\nexport let registration = (email: string, password: string): ThunkType => async (dispatch: Dispatch<ActionType>) => {\n    dispatch(loadingAC(true))\n    try {\n        await registrationAPI.registration(email, password)\n        dispatch(loadingAC(false))\n        dispatch(redirectAC(true))\n        dispatch(redirectAC(false))\n        dispatch(errorAC(null))\n    } catch (e) {\n        console.log(e)\n        const err = e.response\n        dispatch(errorAC(err.data.error))\n        dispatch(loadingAC(false))\n    }\n}\n\n","import {Dispatch} from \"redux\";\n\nexport type initialStateType = {\n    isFetching: boolean\n}\n\nconst initialState = {} as initialStateType\n\nexport const appReducer = (state: typeof initialState = initialState, action: ActionType): initialStateType => {\n    switch (action.type) {\n        case 'IS-FETCHING':\n            return {\n                ...state,\n                isFetching: action.payload.isFetching\n            }\n        default:\n            return state\n    }\n}\n\n//TYPES\ntype ActionType = ReturnType<typeof isFetchingAC>;\n\n//AC\nexport const isFetchingAC = (isFetching: boolean) => ({\n    type: 'IS-FETCHING',\n    payload: {isFetching}\n} as const)\n\n//THUNK\n","import axios from \"axios\";\nimport {LoginResponseType, LogoutResponseType} from \"../m1-ui/common/types/types\";\n\nconst instance = axios.create({\n    //baseURL: 'https://neko-back.herokuapp.com/2.0',\n    baseURL: 'http://localhost:7542/2.0/',\n    withCredentials: true\n})\n\n/*\"http://localhost:7542/2.0/\"*/\n\ntype ErrorType = {\n    email: string\n    error: string\n    in: string\n}\n\nexport const loginAPI = {\n    login(password: string, email: string, rememberMe: boolean){\n        return instance.post<LoginResponseType>('auth/login', {password, email, rememberMe})\n    },\n    isAuth(){\n        return instance.post<LoginResponseType>('auth/me', {})\n    },\n    logOut(){\n        return instance.delete<LogoutResponseType>('auth/me', {})\n    }\n}\n\nexport const registrationAPI = {\n    registration(email: string, password: string) {\n        return instance.post<any | ErrorType>('/auth/register', {email, password})\n    }\n}\nexport const newPasswordAPI = {\n    postNewPassword(password:string,resetPasswordToken:string) {\n        return instance.post(`auth/set-new-password`, {password,resetPasswordToken}).then(response => response.data)\n    }\n}\nexport const lostPasswordAPI = {\n    postEmail(email: string) {\n        return instance.post(`auth/forgot`, {email, from: \"cards-admin <valdismin@gmail.com>\", message: `<div style=\"background-color: lime; padding: 15px\"> password recovery link: <a href='https://RomanRadaykinFrontend.github.io/friday-project/#/enter-new-password/$token$'>link</a></div>`}).then(response => response.data)\n    }\n}","import {Dispatch} from \"redux\";\nimport { isFetchingAC } from \"./app-reducer\";\nimport {LoginResponseType} from \"../m1-ui/common/types/types\";\nimport {loginAPI} from \"../m3-dal/api\";\n\nexport type LoginStateType = {\n    isAuth: boolean\n    errorMessage: string\n    data: LoginResponseType\n}\n\nconst initialState = {} as LoginStateType\n\nexport const loginReducer = (state: typeof initialState = initialState, action: ActionType): LoginStateType => {\n    switch (action.type) {\n        case 'SUCCESS-LOGIN':\n            return {\n                ...state,\n                isAuth: action.payload.isAuth,\n                data: action.payload.data,\n                errorMessage: ''\n            }\n        case \"FAILED-LOGIN\":\n            return {\n                ...state,\n                isAuth: action.payload.isAuth,\n                errorMessage: action.payload.errorMessage,\n            }\n        case 'SUCCESS-LOGOUT':\n            return {\n                ...state,\n                isAuth: action.payload.isAuth,\n            }\n        default:\n            return state\n    }\n}\n\n//TYPES\ntype ActionType = ReturnType<typeof successLoginAC> | ReturnType<typeof failedLoginAC>\n    | ReturnType<typeof isFetchingAC>\n    | ReturnType<typeof successLogoutAC>\n\n//AC\nconst successLoginAC = (data: LoginResponseType, isAuth: boolean, errorMessage: string) => (\n    {\n        type: 'SUCCESS-LOGIN',\n        payload: {\n            data: {...data},\n            isAuth,\n            errorMessage\n        }\n    } as const\n)\n\nconst failedLoginAC = (errorMessage: string, isAuth: boolean) => (\n    {\n        type: 'FAILED-LOGIN',\n        payload: {\n            errorMessage,\n            isAuth\n        }\n    } as const\n)\n\nconst successLogoutAC = (isAuth: boolean) => (\n    {\n        type: 'SUCCESS-LOGOUT',\n        payload: {\n            isAuth\n        }\n    } as const\n)\n\n//THUNK\n\nexport const isAuthTC = () => (dispatch: Dispatch<ActionType>) => {\n    loginAPI.isAuth()\n        .then(res => {\n            debugger\n            dispatch(successLoginAC(res.data, true, ''))\n        })\n        .catch((e) => {\n            const error = e.response\n                ? e.response.data.error\n                : (e.message + ', more details in the console');\n            dispatch(failedLoginAC(error, false))\n        })\n}\nexport const loginTC = (password: string, email: string, rememberMe: boolean) => (dispatch: Dispatch<ActionType>) => {\n    dispatch(isFetchingAC(true))\n    loginAPI.login(password, email, rememberMe)\n        .then(res => {\n            dispatch(successLoginAC(res.data, true, ''))\n            dispatch(isFetchingAC(false))\n        })\n        .catch((e) => {\n            const error = e.response\n                ? e.response.data.error\n                : (e.message + ', more details in the console');\n            dispatch(failedLoginAC(error, false))\n            dispatch(isFetchingAC(false))\n        })\n}\n\nexport const logoutTC = () => (dispatch: Dispatch<ActionType>) => {\n    dispatch(isFetchingAC(true))\n    loginAPI.logOut()\n        .then(res => {\n            dispatch(successLogoutAC(false))\n            dispatch(isFetchingAC(false))\n        })\n        .catch((e) => {\n            const error = e.response\n                ? e.response.data.error\n                : (e.message + ', more details in the console');\n            dispatch(failedLoginAC(error, false))\n            dispatch(isFetchingAC(false))\n        })\n}\n\n","import {useFormik} from \"formik\";\nimport React from \"react\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {Redirect} from \"react-router-dom\";\nimport s from './../registration/Registration.module.css'\nimport m from './login.module.css'\nimport {AppStateType} from \"../../m2-bll/store\";\nimport {LoginStateType, loginTC} from \"../../m2-bll/login-reducer\";\n\nconst Login = () => {\n\n    const dispatch = useDispatch();\n    const {\n        isAuth,\n        errorMessage\n    } = useSelector<AppStateType, LoginStateType>(state => state.login);\n    const fetch = useSelector<AppStateType, boolean>(state => state.app.isFetching);\n\n    const formik = useFormik({\n        initialValues: {\n            email: '',\n            password: '',\n            rememberMe: false\n        },\n        onSubmit: values => {\n            dispatch(loginTC(values.password, values.email, values.rememberMe))\n        },\n    });\n\n    console.log(errorMessage)\n\n    if (isAuth) {\n        return <Redirect to={'/profile'}/>\n    }\n\n    return <div>\n        <h1 className={s.h1}>Login</h1>\n\n        <form className={s.form} onSubmit={formik.handleSubmit}>\n            <div className={s.form_item}>\n                <label htmlFor=\"email\">Email Address</label>\n                <input\n                    id=\"email\"\n                    name=\"email\"\n                    type=\"email\"\n                    onChange={formik.handleChange}\n                    value={formik.values.email}\n                />\n\n            </div>\n\n            <div className={s.form_item}>\n                <label htmlFor=\"password\">Password</label>\n                <input type={'text'} name={'password'} id={'password'}\n                       value={formik.values.password}\n                       onChange={formik.handleChange}/>\n            </div>\n\n            <div className={`${s.form_item} ${m.form_item_rememberMe}`}>\n                <label htmlFor=\"rememberMe\">Remember me</label>\n                <input type=\"checkbox\" name=\"rememberMe\"\n                       value=\"rememberMe\" onChange={formik.handleChange}/>\n            </div>\n\n            <button className={s.button} type=\"submit\" disabled={fetch}>Submit</button>\n        </form>\n\n        {fetch && <div className={s.loading}>Loading...</div>}\n        {errorMessage && <div className={s.error}>{errorMessage}</div>}\n\n    </div>\n}\n\nexport default Login\n","import {useFormik} from \"formik\";\nimport React from \"react\";\nimport {registration} from \"../../m2-bll/registration-reducer\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {AppStateType} from \"../../m2-bll/store\";\nimport {Redirect} from \"react-router-dom\";\nimport s from \"./Registration.module.css\"\n\ntype ErrorType = {\n    email?: string\n    password?: string\n}\n\nexport const Registration = () => {\n\n    const dispatch = useDispatch()\n    const error = useSelector<AppStateType, string | null>(state => state.registration.error)\n    const redirect = useSelector<AppStateType, boolean>(state => state.registration.isRedirecting)\n    const isLoading = useSelector<AppStateType, boolean>(state => state.registration.isLoading)\n\n    const formik = useFormik({\n        initialValues: {\n            email: '',\n            password: '',\n            confirmPassword: ''\n        },\n\n        onSubmit: (values) => {\n            dispatch(registration(values.email, values.password))\n            //formik.resetForm()\n        },\n\n        validate: (values) => {\n            const errors: ErrorType = {};\n            if (!values.email) {\n                errors.email = 'Required';\n            } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n                errors.email = 'Invalid email address';\n            }\n\n            if (!values.password) {\n                errors.password = 'Required';\n            } else if (values.password.length <= 7) {\n                errors.password = 'Password should be more 7 symbols';\n            }\n\n            if(values.password !== values.confirmPassword && values.confirmPassword !== \"\") {\n                errors.password = 'Passwords do not match'\n            }\n\n            return errors;\n        }\n    })\n\n    if (redirect) {\n        return <Redirect to={'login'}/>\n    }\n\n    return (\n        <div className={s.registration}>\n            <h1 className={s.h1}>Форма регистрации</h1>\n            <form className={s.form} onSubmit={formik.handleSubmit}>\n\n                <div className={s.form_item}>\n                    <input type=\"text\"\n                           placeholder=\"Введите логин\"\n                           {...formik.getFieldProps('email')}\n                    />\n                    {formik.touched.email && formik.errors.email ?\n                        <div className={s.error}>{formik.errors.email}</div> : null}\n                </div>\n\n                <div className={s.form_item}>\n                    <input type=\"password\"\n                           placeholder=\"Введите пароль\"\n                           {...formik.getFieldProps('password')}\n                    />\n\n                    {formik.touched.password && formik.errors.password ?\n                        <div className={s.error}>{formik.errors.password}</div> : null}\n                </div>\n\n                <div className={s.form_item}>\n                    <input type=\"password\"\n                           placeholder=\"Введите пароль еще раз\"\n                           {...formik.getFieldProps('confirmPassword')}\n                    />\n\n                    {formik.touched.confirmPassword && formik.errors.confirmPassword ?\n                        <div className={s.error}>{formik.errors.confirmPassword}</div> : null}\n                </div>\n\n                <button className={s.button} type='submit' disabled={isLoading}>Зарегистрироваться</button>\n\n            </form>\n\n            {error && !isLoading && <div className={s.error}>{error}</div>}\n            {isLoading && <div className={s.loading}>LOADING...</div>}\n        </div>\n\n    )\n}","import React from \"react\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {Redirect} from \"react-router-dom\";\nimport {AppStateType} from \"../../m2-bll/store\";\nimport {logoutTC} from \"../../m2-bll/login-reducer\";\nimport {LoginResponseType} from \"../common/types/types\";\n\nconst Profile = () => {\n    const dispatch = useDispatch();\n    const isAuth = useSelector<AppStateType, boolean>(state => state.login.isAuth);\n    const fetch = useSelector<AppStateType, boolean>(state => state.app.isFetching);\n    const profileData = useSelector<AppStateType, LoginResponseType>(state => state.login.data);\n\n    const logout = () => {\n        dispatch(logoutTC())\n    }\n\n    if(!isAuth){\n        return <Redirect to={'/login'}/>\n    }\n\n    return <div>\n        Profile\n        <div>\n            <img src={profileData.avatar} alt=\"\"/>\n            <div>{profileData.name}</div>\n        </div>\n        <button onClick={logout}>logout</button>\n    </div>\n}\n\nexport default Profile\n","import {lostPasswordAPI, newPasswordAPI} from \"../m3-dal/api\";\n\n\nlet initialState = {\n    error: null,\n    redirect:false\n}\n\nexport type  initType = {\n    error: string | null,\n    redirect:boolean\n}\n\nexport const enterNewPasswordReducer = (state: initType = initialState, action: ActionType): initType => {\n    switch (action.type) {\n        case \"SET-ERROR\":\n            return {...state, error: action.responseError}\n        case \"CHANGE-REDIRECT\":\n            return {...state, redirect: action.redirectStatus}\n        default:\n            return state\n    }\n}\n\n\nexport const setResponseError = (responseError: string | null) => ({type: \"SET-ERROR\", responseError} as const)\nexport const changeRedirectStatus = (redirectStatus: boolean) => ({type: \"CHANGE-REDIRECT\", redirectStatus} as const)\n\ntype ActionType = ReturnType<typeof setResponseError> | ReturnType<typeof changeRedirectStatus>\n\n\n\nexport const postNewPasswordTC = (password:string,resetPasswordToken:string) =>\n    async (dispatch: any) => {\n        try {\n            await newPasswordAPI.postNewPassword(password,resetPasswordToken)\n            dispatch(changeRedirectStatus(true))\n        } catch (e) {\n            const error = e.response ? e.response.data.error : (e.message + \", more details in the console\");\n            dispatch(setResponseError(error))\n        }\n    }\n\nexport const postEmailTC = (email: string) =>\n    async (dispatch: any) => {\n        try {\n            await lostPasswordAPI.postEmail(email)\n            dispatch(changeRedirectStatus(true))\n        } catch (e) {\n            const error = e.response ? e.response.data.error : (e.message + \", more details in the console\");\n            dispatch(setResponseError(error))\n        }\n    }\n","import React, {ChangeEvent, useState} from \"react\"\nimport {Redirect, useParams} from \"react-router-dom\"\nimport {useDispatch, useSelector} from \"react-redux\"\nimport {AppStateType} from \"../../m2-bll/store\"\nimport {postNewPasswordTC} from \"../../m2-bll/enter-new-password-reducer\"\nimport s from './NewPassword.module.css'\n\n\nexport const EnterNewPassword = () => {\n\n    const [password1, setPassword1] = useState(\"\")\n    const [password2, setPassword2] = useState(\"\")\n    const {token} = useParams<{ token: string }>()\n    const dispatch = useDispatch()\n    const redirect = useSelector<AppStateType, boolean>(state => state.enterNewPassword.redirect)\n    const [badPassword, setBadPassword] = useState(false)\n    const error = useSelector<AppStateType, string | null>(state => state.enterNewPassword.error)\n\n    const changePassword1 = (e: ChangeEvent<HTMLInputElement>) => {\n        setPassword1(e.currentTarget.value)\n    }\n    const changePassword2 = (e: ChangeEvent<HTMLInputElement>) => {\n        setPassword2(e.currentTarget.value)\n    }\n\n    const changePassword = () => {\n        if (password1 === password2) {\n            return dispatch(postNewPasswordTC(password2, token))\n        } else {\n            return setBadPassword(true)\n        }\n\n    }\n\n    if (redirect) {\n        return <Redirect to={\"/login\"}/>\n    }\n\n    return <div className={s.main}>\n        <h1>Введите новый пароль</h1>\n        <div className={s.inputs}>\n            <input onChange={changePassword1} type=\"password\" placeholder={\"Enter new password\"}/>\n            <input onChange={changePassword2} type=\"password\" placeholder={\"Repeat new password\"}/>\n            {badPassword ? <div>Passwords mismatch!</div> : null}\n            {error ? <div className={s.error}>{error}</div> : null}\n        </div>\n        <button onClick={changePassword}>Next</button>\n    </div>\n}","import React, {ChangeEvent, useState} from \"react\";\nimport s from \"./LostPassword.module.css\"\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {AppStateType} from \"../../m2-bll/store\";\nimport {postEmailTC, setResponseError} from \"../../m2-bll/enter-new-password-reducer\";\n\nexport const PasswordRecovery = () => {\n\n    const error = useSelector<AppStateType, string | null>(state => state.enterNewPassword.error)\n    const [email, setEmail] = useState(\"\")\n    const redirect = useSelector<AppStateType, boolean>(state => state.enterNewPassword.redirect)\n    const dispatch = useDispatch()\n\n    const onInputChange = (e: ChangeEvent<HTMLInputElement>) => {\n        setEmail(e.currentTarget.value)\n        dispatch(setResponseError(null))\n    }\n\n    const postEmail = () => {\n        return dispatch(postEmailTC(email))\n    }\n\n\n    return <div>\n        {redirect ? <h3 className={s.message}>We have sent you a message with a link to change your password to this address:{email}</h3> :\n            <div className={s.main}>\n                <h1>Укажите email или телефон</h1>\n                <h3>Пожалуйста, укажите email или телефон, который вы использовали для входа на сайт</h3>\n                <input onChange={onInputChange} placeholder={\"Enter Email\"}/>\n                {error ? <div className={s.error}>{error}</div> : null}\n                <button onClick={postEmail}>Next</button>\n            </div>\n        }\n    </div>\n}","import React from \"react\";\n\nconst Error404 = () => {\n    return <div>\n        Error404\n    </div>\n}\n\nexport default Error404\n","import React from \"react\";\nimport {Redirect, Route, Switch } from \"react-router-dom\";\nimport Login from \"../login/Login\";\nimport {Registration} from \"../registration/Registration\";\nimport Profile from \"../profile/Profile\";\nimport {EnterNewPassword} from \"../enterNewPassword/EnterNewPassword\";\nimport {PasswordRecovery} from \"../passwordRecovery/PasswordRecovery\";\nimport Error404 from \"../error404/Error404\";\n\n\nexport const PATH = {\n    LOGIN: \"/login\",\n    REGISTRATION: \"/registration\",\n    PROFILE: \"/profile\",\n    NEW_PASS : \"/enter-new-password/:token\",\n    RESET_PASS: \"/password-recovery\",\n    TEST: \"/show-all\",\n}\n\nexport const Routes = () => {\n    return (\n        <div>\n            <Switch>\n\n                <Route path={\"/\"} exact render={() => <Redirect to={PATH.PROFILE}/>}/>\n                <Route path={PATH.LOGIN} render={() => <Login/>}/>\n                <Route path={PATH.REGISTRATION} render={() => <Registration/>}/>\n                <Route path={PATH.PROFILE} render={() => <Profile/>}/>\n                <Route path={PATH.NEW_PASS} render={() => <EnterNewPassword/>}/>\n                <Route path={PATH.RESET_PASS} render={() => <PasswordRecovery/>}/>\n{/*\n                <Route path={PATH.TEST} render={() => <ShowAllComponents/>}/>\n*/}\n\n                у этого роута нет пути, он отрисуется если пользователь захочет попасть на несуществующую страницу\n                <Route render={() => <Error404/>}/>\n\n            </Switch>\n        </div>\n    );\n}","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport style from'./Nav.module.css'\nimport {PATH} from \"../routes/Routes\";\n\nconst Nav = () => {\n    return <nav className={style.nav}>\n        <NavLink to={PATH.LOGIN}>Login </NavLink>\n        <NavLink to={PATH.REGISTRATION}>Registration</NavLink>\n        <NavLink to={PATH.PROFILE}>Profile</NavLink>\n        <NavLink to={PATH.RESET_PASS}>Password recovery</NavLink>\n        <NavLink to={PATH.NEW_PASS}>New password</NavLink>\n        <NavLink to={PATH.TEST}>Show all</NavLink>\n    </nav>\n}\n\nexport default Nav\n","import React, { useEffect } from 'react';\nimport {HashRouter} from 'react-router-dom';\nimport './App.css';\nimport {useDispatch} from \"react-redux\";\nimport {Routes} from \"./routes/Routes\";\nimport Nav from \"./nav/Nav\";\nimport {isAuthTC} from \"../m2-bll/login-reducer\";\n\n\nfunction App() {\n\n       useEffect(() => {\n        dispatch(isAuthTC())\n    }, [])\n\n    //const auth = useSelector<RootStateType, boolean>(state => state.login.isAuth);\n    const dispatch = useDispatch();\n\n  return (\n      <HashRouter>\n          <Nav/>\n          <Routes/>\n      </HashRouter>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {Dispatch} from \"redux\";\n\nexport type ProfileStateType = {\n}\n\nconst initialState = {} as ProfileStateType\n\nexport const profileReducer = (state: typeof initialState = initialState, action: ActionType): ProfileStateType => {\n    switch (action.type) {\n\n        default:\n            return state\n    }\n}\n\n//TYPES\ntype ActionType = any;\n\n//AC\n\n//THUNK\n\n","\nexport type PasswordRecoveryStateType = {\n}\n\nconst initialState = {} as PasswordRecoveryStateType\n\nexport const passwordRecoveryReducer = (state: typeof initialState = initialState, action: ActionType): PasswordRecoveryStateType => {\n    switch (action.type) {\n\n        default:\n            return state\n    }\n}\n\n//TYPES\ntype ActionType = any;\n\n//AC\n\n//THUNK\n","import { combineReducers, applyMiddleware } from 'redux'\nimport {loginReducer} from \"./login-reducer\";\nimport { createStore } from 'redux'\nimport {registrationReducer} from \"./registration-reducer\";\nimport thunkMiddleware from 'redux-thunk'\nimport {profileReducer} from \"./profile-reducer\";\nimport {passwordRecoveryReducer} from \"./password-recovery-reducer\";\nimport {enterNewPasswordReducer} from \"./enter-new-password-reducer\";\nimport {appReducer} from \"./app-reducer\";\n\nlet rootReducer = combineReducers({\n    login: loginReducer,\n    registration: registrationReducer,\n    profile: profileReducer,\n    passwordRecovery: passwordRecoveryReducer,\n    enterNewPassword: enterNewPasswordReducer,\n    app: appReducer\n})\n\nexport type AppStateType = ReturnType<typeof rootReducer>\nexport let store = createStore(rootReducer, applyMiddleware(thunkMiddleware))","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './n1-main/m1-ui/App';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from \"react-redux\";\nimport {store} from \"./n1-main/m2-bll/store\";\nimport {HashRouter} from \"react-router-dom\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <HashRouter>\n            <Provider store={store}>\n                <App/>\n            </Provider>\n        </HashRouter>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}